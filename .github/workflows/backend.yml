#github action for all python files pushed to the main and api branches
#and pull_request to the main branch

#Author: Eng. Michael Kofi Armah
#Date Created: 11/06/22


name: PEP8 requirements

on: 
  push: #action runs on push events that target the main and api branches
    branches: [main,master]
    paths: #ignore all frontend specific pushes and run for only backend or python pushes
      - '**.py'
      - '!**.html'
      - '!**.js'
      - '!**.css'
      - '!templates/**'
      
  pull_request: #action runs on pull_requests that runs on the main branch
    branches: [main,master]
    paths:
      - '**.py'
    
jobs:
  build:
    runs-on: ubuntu-latest #runs on ubuntu's latest os
    
    steps:
    - name: Checkout  
      uses: actions/checkout@v2
    
    - name: Get changed files
      uses: dorny/paths-filter@v2  
      id: filter
      with:  
        list-files: shell  # we'll run it as arguments in Linux shell
        filters: |  # we won't run against on non-existent files which may cause runtime error
          py_modified:  
          - added|modified: "./**/*.py"
      
    - name: Python Set up 
      if: ${{ steps.filter.outputs.py_modified == 'true' }}
      uses: actions/setup-python@v3
      with:
        python-version: '3.10' #python version to run on | currently the latest version
#         cache: 'pip'           
    
    - name: Install PEP8 dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install autopep8
        
    - name: Install requirements #requirements.txt is set to run when there is a new or modified version of it
      if: ${{ steps.filter.outputs.py_modified == 'true' }}
      run: pip install -r requirements.txt
      
    - name: Autopep8 #run autopep8 on only modified or added python files
      if: ${{ steps.filter.outputs.py_modified == 'true' }} 
      run: |
        autopep8 --in-place --aggressive --aggressive ${{ steps.filter.outputs.py_modified_files }}
      
#     - name: Analysing the code with pylint #pylint get applied to newly added and modified files only
#       if: ${{ steps.filter.outputs.py_modified == 'true' }}
#       run: |
#         pylint ${{ steps.filter.outputs.py_modified_files }}
